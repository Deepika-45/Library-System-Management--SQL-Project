-- Library Project Task

SELECT * FROM books;
SELECT * FROM members;
SELECT * FROM issued_status;
SELECT * FROM return_status;
SELECT * FROM employees;
SELECT * FROM branch;

-- CRUD TASK 
-- Q1. Create a New Book Record
-- "978-1-60129-456-2', 'To Kill a Mockingbird', 'Classic', 6.00, 'yes', 'Harper Lee', 'J.B. Lippincott & Co.')"

INSERT INTO books(isbn, book_title, category, rental_price, status, author, publisher)
VALUES('978-1-60129-456-2', 'To Kill a Mockingbird', 'Classic', 6.00, 'yes', 'Harper Lee', 'J.B. Lippincott & Co.');
SELECT * FROM books;

DELETE FROM books
WHERE   isbn =   '978-1-60129-456-2'

-- 

-- Task 2: Update an Existing Member's Address
-- Objective: Update the address of the member with member_id = 'C103'.

UPDATE members
SET member_address = '125 Oak St'
WHERE member_id = 'C103';

SELECT * FROM members
WHERE member_id = 'C103';

-- Task 3: Delete a Record from the Issued Status Table
-- Objective: Delete the record with issued_id = 'IS104' from the issued_status table.



DELETE FROM issued_status
WHERE   issued_id =   'IS104';


-- Task 4: Retrieve All Books Issued by a Specific Employee
-- Objective: Select all books issued by the employee with emp_id = 'E101'.

SELECT * FROM issued_status
WHERE issued_emp_id = 'E101'



-- Task 5: List Members Who Have Issued More Than One Book
-- Objective: Use GROUP BY to find members who have issued more than one book.


SELECT
    issued_emp_id,
    COUNT(*)
FROM issued_status
GROUP BY 1
HAVING COUNT(*) > 1

-- CTAS - CREATE TABLE AS SELECT STATEMENT

-- T.6 Create Summary Tables**: Used CTAS to generate new tables based on query results - each book and total book_issued_cnt!

CREATE TABLE book_issued_cnt AS
SELECT b.isbn, b.book_title, COUNT(ist.issued_id) AS issue_count
FROM issued_status as ist
JOIN books as b
ON ist.issued_book_isbn = b.isbn
GROUP BY b.isbn, b.book_title;


    
SELECT * FROM book_issued_cnt;



-- Task 7. **Retrieve All Books in a Specific Category**:

SELECT * FROM books
WHERE category = 'Classic';


-- Task 8: Find Total Rental Income by Category
-- Objective: Use GROUP BY to find the total rental income generated by each book category.


SELECT 
    b.category,
    SUM(b.rental_price),
    COUNT(*)
FROM 
issued_status as ist
JOIN
books as b
ON b.isbn = ist.issued_book_isbn
GROUP BY 1




-- Task 9: List Employees with Their Branch Manager's Name and their branch details
SELECT * FROM employees;
SELECT * FROM branch;

SELECT 
    e1.emp_id,
    e1.emp_name,
    e1.position,
    e1.salary,
    b.*,
    e2.emp_name as manager
FROM employees as e1
JOIN 
branch as b
ON e1.branch_id = b.branch_id    
JOIN
employees as e2
ON e2.emp_id = b.manager_id
    



-- Task 10: Retrieve the List of Books Not Yet Returned
-- Objective: Use a LEFT JOIN to find all books that have been issued but not yet returned.

SELECT * FROM issued_status as ist
LEFT JOIN
return_status as rs
ON rs.issued_id = ist.issued_id
WHERE rs.return_id IS NULL



